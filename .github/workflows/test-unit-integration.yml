name: Unit & Integration Tests

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint:strict
        continue-on-error: false

      - name: Run type checking
        run: npx tsc --noEmit
        continue-on-error: false

      - name: Run tests with coverage
        run: npm run test:ci
        env:
          NODE_OPTIONS: '--max-old-space-size=6144'
          LOG_LEVEL: error
          CI: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Coverage Summary
        if: always()
        run: |
          echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          npx jest --coverage --coverageReporters=text-summary --silent 2>/dev/null | tail -n 10 >> $GITHUB_STEP_SUMMARY || echo "Coverage report generation failed" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Check coverage thresholds
        run: |
          echo "Checking coverage against thresholds defined in jest.config.js..."
          npx jest --coverage --silent --passWithNoTests
        continue-on-error: false

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage report
        run: npm run test:ci
        env:
          NODE_OPTIONS: '--max-old-space-size=6144'
          LOG_LEVEL: error
          CI: true

      - name: Comment PR with coverage
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          threshold: 60
          skip-step: all
          coverage-file: ./coverage/coverage-final.json
          base-coverage-file: ./coverage/coverage-final.json
          annotations: failed-tests
          custom-title: "ðŸ“Š Test Coverage Report"

  parallel-test:
    name: Parallel Test Execution
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
        total-shards: [4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (shard ${{ matrix.shard }}/${{ matrix.total-shards }})
        run: |
          npx jest --shard=${{ matrix.shard }}/${{ matrix.total-shards }} \
            --coverage \
            --coverageReporters=json \
            --silent \
            --passWithNoTests
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
          LOG_LEVEL: error
          CI: true

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-shard-${{ matrix.shard }}
          path: coverage/coverage-final.json
          retention-days: 1

  merge-coverage:
    name: Merge Coverage Reports
    runs-on: ubuntu-latest
    needs: parallel-test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Download all coverage artifacts
        uses: actions/download-artifact@v3
        with:
          path: coverage-artifacts

      - name: Merge coverage reports
        run: |
          mkdir -p coverage
          npx nyc merge coverage-artifacts coverage/coverage-final.json
          npx nyc report --reporter=text-summary --reporter=lcov

      - name: Check merged coverage thresholds
        run: |
          echo "Final coverage check against thresholds..."
          npx nyc check-coverage \
            --lines 51 \
            --functions 46 \
            --branches 44 \
            --statements 51